//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace final_web_app.JobService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Service1.Job", Namespace="http://schemas.datacontract.org/2004/07/JobService")]
    [System.SerializableAttribute()]
    public partial class Service1Job : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string jobIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string jobRoleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string locationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string minWorkExField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string skillSetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string vacantPositionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string jobId {
            get {
                return this.jobIdField;
            }
            set {
                if ((object.ReferenceEquals(this.jobIdField, value) != true)) {
                    this.jobIdField = value;
                    this.RaisePropertyChanged("jobId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string jobRoleName {
            get {
                return this.jobRoleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.jobRoleNameField, value) != true)) {
                    this.jobRoleNameField = value;
                    this.RaisePropertyChanged("jobRoleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string location {
            get {
                return this.locationField;
            }
            set {
                if ((object.ReferenceEquals(this.locationField, value) != true)) {
                    this.locationField = value;
                    this.RaisePropertyChanged("location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string minWorkEx {
            get {
                return this.minWorkExField;
            }
            set {
                if ((object.ReferenceEquals(this.minWorkExField, value) != true)) {
                    this.minWorkExField = value;
                    this.RaisePropertyChanged("minWorkEx");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string skillSet {
            get {
                return this.skillSetField;
            }
            set {
                if ((object.ReferenceEquals(this.skillSetField, value) != true)) {
                    this.skillSetField = value;
                    this.RaisePropertyChanged("skillSet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string vacantPosition {
            get {
                return this.vacantPositionField;
            }
            set {
                if ((object.ReferenceEquals(this.vacantPositionField, value) != true)) {
                    this.vacantPositionField = value;
                    this.RaisePropertyChanged("vacantPosition");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="JobService.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateJob", ReplyAction="http://tempuri.org/IService1/CreateJobResponse")]
        bool CreateJob(string jobId, string jobRoleName, string location, string skillSet, string minWorkEx, string vacantPosition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateJob", ReplyAction="http://tempuri.org/IService1/CreateJobResponse")]
        System.Threading.Tasks.Task<bool> CreateJobAsync(string jobId, string jobRoleName, string location, string skillSet, string minWorkEx, string vacantPosition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ViewJob", ReplyAction="http://tempuri.org/IService1/ViewJobResponse")]
        final_web_app.JobService.Service1Job[] ViewJob(string skillSet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ViewJob", ReplyAction="http://tempuri.org/IService1/ViewJobResponse")]
        System.Threading.Tasks.Task<final_web_app.JobService.Service1Job[]> ViewJobAsync(string skillSet);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : final_web_app.JobService.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<final_web_app.JobService.IService1>, final_web_app.JobService.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool CreateJob(string jobId, string jobRoleName, string location, string skillSet, string minWorkEx, string vacantPosition) {
            return base.Channel.CreateJob(jobId, jobRoleName, location, skillSet, minWorkEx, vacantPosition);
        }
        
        public System.Threading.Tasks.Task<bool> CreateJobAsync(string jobId, string jobRoleName, string location, string skillSet, string minWorkEx, string vacantPosition) {
            return base.Channel.CreateJobAsync(jobId, jobRoleName, location, skillSet, minWorkEx, vacantPosition);
        }
        
        public final_web_app.JobService.Service1Job[] ViewJob(string skillSet) {
            return base.Channel.ViewJob(skillSet);
        }
        
        public System.Threading.Tasks.Task<final_web_app.JobService.Service1Job[]> ViewJobAsync(string skillSet) {
            return base.Channel.ViewJobAsync(skillSet);
        }
    }
}
